#%RAML 1.0
title: iot-device-manager
mediaType: application/vnd.collection+json
baseUri: http://localhost:8080/rest

/device:
  get:
    description: Get devices matching parameters
    queryParameters:
      id:
        description: Device id used as filter
        type: number
        required: false
      name:
        description: Device name used as filter
        required: false
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
      deviceTypeId:
        description: Device type id used as filter
        type: number
        required: false
      deviceGroupId:
        description: Device group id used as filter
        type: number
        required: false
      configurationId:
        description: Device configuration id used as filter
        type: number
        required: false
      authenticationKey:
        description: Device authenticationKey used as filter
        required: false
        type: string
        minLength: 32
        maxLength: 32
    responses:
      200:
        description: Devices succesfully found
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device?name=example-device",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier"},
                      { "name": "name", "value": "example-device", "prompt": "Device name"},
                      { "name": "deviceTypeId", "value": "2", "prompt": "Device Type Identifier"},
                      { "name": "deviceGroupId", "value": "3", "prompt": "Device Group Identifier"},
                      { "name": "configurationId", "value": "4", "prompt": "Configuration Identifier"},
                      { "name": "authenticationKey", "value": "as7y7das0923jnawoij2n22jj2nekj2n", "prompt": "Device Authentication Key"}
                    ]
                  }
                ],
                "links": [
                  { "rel": "type", "href":"http://localhost:8080/api/device-type?id=2", "prompt": "Device Type"},
                  { "rel": "group", "href":"http://localhost:8080/api/device-group?id=3", "prompt": "Device Group"},
                  { "rel": "configuration", "href":"http://localhost:8080/api/device-group?id=3", "prompt": "Configuration"},
                  { "rel": "location", "href":"http://localhost:8080/api/location?deviceId=1", "prompt": "Locations"}
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Device name", "regexp": "[A-Za-z0-9_ .,-]{1,50}"},
                    { "name": "deviceTypeId", "value": "", "prompt": "Device Type Identifier"},
                    { "name": "deviceGroupId", "value": "", "prompt": "Device Group Identifier"},
                    { "name": "configurationId", "value": "", "prompt": "Configuration Identifier"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" },
                      { "name": "deviceTypeId", "value": "" },
                      { "name": "deviceGroupId", "value": "" },
                      { "name": "configurationId", "value": "" },
                      { "name": "authenticationKey", "value": "" }
                  ]}
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: [A-Za-z0-9_ .,-]{1,50}"
                }
              }
            }
      404:
        description: No devices found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  post:
    description: Add new device with given parameters
    body:
      application/json:
        properties:
          name:
            type: string
            maxLength: 50
            pattern: "[A-Za-z0-9_ .,-]{1,50}"
          deviceTypeId:
            type: integer
            required: false
          deviceGroupId:
            type: integer
            required: false
          configurationId:
            type: integer
            required: false
    responses:
      201:
        description: Device succesfully added. Returns inserted device including generated id and authentication key
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device?name=example-device",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier"},
                      { "name": "name", "value": "example-device", "prompt": "Device name"},
                      { "name": "deviceTypeId", "value": "2", "prompt": "Device Type Identifier"},
                      { "name": "deviceGroupId", "value": "3", "prompt": "Device Group Identifier"},
                      { "name": "configurationId", "value": "4", "prompt": "Configuration Identifier"},
                      { "name": "authenticationKey", "value": "as7y7das0923jnawoij2n22jj2nekj2n", "prompt": "Device Authentication Key"}
                    ]
                  }
                ],
                "links": [
                  { "rel": "type", "href":"http://localhost:8080/api/device-type?id=2", "prompt": "Device Type"},
                  { "rel": "group", "href":"http://localhost:8080/api/device-group?id=3", "prompt": "Device Group"},
                  { "rel": "configuration", "href":"http://localhost:8080/api/device-group?id=3", "prompt": "Configuration"},
                  { "rel": "location", "href":"http://localhost:8080/api/location?deviceId=1", "prompt": "Locations"}
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Device name", "regexp": "[A-Za-z0-9_ .,-]{1,50}"},
                    { "name": "deviceTypeId", "value": "", "prompt": "Device Type Identifier"},
                    { "name": "deviceGroupId", "value": "", "prompt": "Device Group Identifier"},
                    { "name": "configurationId", "value": "", "prompt": "Configuration Identifier"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" },
                      { "name": "deviceTypeId", "value": "" },
                      { "name": "deviceGroupId", "value": "" },
                      { "name": "configurationId", "value": "" },
                      { "name": "authenticationKey", "value": "" }
                  ]}
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: [A-Za-z0-9_ .,-]{1,50}"
                }
              }
            }
      409:
        description: Device name already used for another device
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "Parameter conflict",
                  "code": "1004",
                  "message": "Parameter must be unique: name"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  put:
    description: Update given attributes of device
    queryParameters:
      id:
        description: Device id used as filter. Required if other request parameters are not present.
        required: false
        type: number
      name:
        description: Device name used as filter. Required if other request parameters are not present.
        required: false
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
      authenticationKey:
        description: Device authenticationKey used as filter. Required if other request parameters are not present.
        required: false
        type: string
        minLength: 32
        maxLength: 32
    body:
      application/json:
        description: Attributes to update
        properties:
          name:
            required: false
            type: string
            pattern: "[A-Za-z0-9_ .,-]{1,50}"
          deviceTypeId:
            required: false
            type: integer
          deviceGroupId:
            required: false
            type: integer
          configurationId:
            required: false
            type: integer
    responses:
      200:
        description: Device succesfully updated. Returns updated device
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device?name=example-device",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier"},
                      { "name": "name", "value": "example-device", "prompt": "Device name"},
                      { "name": "deviceTypeId", "value": "2", "prompt": "Device Type Identifier"},
                      { "name": "deviceGroupId", "value": "3", "prompt": "Device Group Identifier"},
                      { "name": "configurationId", "value": "4", "prompt": "Configuration Identifier"},
                      { "name": "authenticationKey", "value": "as7y7das0923jnawoij2n22jj2nekj2n", "prompt": "Device Authentication Key"}
                    ]
                  }
                ],
                "links": [
                  { "rel": "type", "href":"http://localhost:8080/api/device-type?id=2", "prompt": "Device Type"},
                  { "rel": "group", "href":"http://localhost:8080/api/device-group?id=3", "prompt": "Device Group"},
                  { "rel": "configuration", "href":"http://localhost:8080/api/device-group?id=3", "prompt": "Configuration"},
                  { "rel": "location", "href":"http://localhost:8080/api/location?deviceId=1", "prompt": "Locations"}
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Device name", "regexp": "[A-Za-z0-9_ .,-]{1,50}"},
                    { "name": "deviceTypeId", "value": "", "prompt": "Device Type Identifier"},
                    { "name": "deviceGroupId", "value": "", "prompt": "Device Group Identifier"},
                    { "name": "configurationId", "value": "", "prompt": "Configuration Identifier"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" },
                      { "name": "deviceTypeId", "value": "" },
                      { "name": "deviceGroupId", "value": "" },
                      { "name": "configurationId", "value": "" },
                      { "name": "authenticationKey", "value": "" }
                  ]}
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: [A-Za-z0-9_ .,-]{1,50}"
                }
              }
            }
      404:
        description: No devices found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      409:
        description: Device name already used for another device
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "Parameter conflict",
                  "code": "1004",
                  "message": "Parameter must be unique: name"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  delete:
    description: Remove device matching parameters
    queryParameters:
      id:
        description: Device id used as filter. Required if other request parameters are not present.
        required: false
        type: number
      name:
        description: Device name used as filter. Required if other request parameters are not present.
        required: false
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_-]"
      authenticationKey:
        description: Device authenticationKey used as filter. Required if other request parameters are not present.
        required: false
        type: string
        minLength: 32
        maxLength: 32
    responses:
      204:
        description: Device successfully removed
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: [A-Za-z0-9_ .,-]{1,50}"
                }
              }
            }
      404:
        description: No devices found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }

/device-group:
  get:
    description: Get device groups matching parameters
    queryParameters:
      id:
        description: Device group id used as filter
        type: number
        required: false
      name:
        description: Device group name used as filter
        required: false
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
    responses:
      200:
        description: Device groups succesfully found
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device-group?name=example-group",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier" },
                      { "name": "name", "value": "example-group", "prompt": "Group name" },
                      { "name": "description", "value": "Example description of group", "prompt": "Description" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "devices", "href":"http://localhost:8080/api/device?deviceGroup=1", "prompt": "Devices" }
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Group name", "regexp": "[A-Za-z0-9_ .,-]{1,50}" },
                    { "name": "description", "value": "", "prompt": "Description", "regexp": "[A-Za-z0-9_ .,-]{1,100}" }
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device-group",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" }
                  ]}
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: [A-Za-z0-9_ .,-]{1,50}"
                }
              }
            }
      404:
        description: No device groups found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  post:
    description: Add new device group with given parameters
    body:
      application/json:
        properties:
          name:
            description: Device group name
            type: string
            maxLength: 50
            pattern: "[A-Za-z0-9_ .,-]{1,50}"
          description:
            description: Device group description
            type: string
            maxLength: 100
            pattern: "[A-Za-z0-9_ .,-]{1,100}"
    responses:
      201:
        description: Device group succesfully added. Returns inserted device group including generated id
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device-group?name=example-group",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier" },
                      { "name": "name", "value": "example-group", "prompt": "Group name" },
                      { "name": "description", "value": "Example description of group", "prompt": "Description" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "devices", "href":"http://localhost:8080/api/device?deviceGroup=1", "prompt": "Devices" }
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Group name", "regexp": "[A-Za-z0-9_ .,-]{1,50}" },
                    { "name": "description", "value": "", "prompt": "Description", "regexp": "[A-Za-z0-9_ .,-]{1,100}" }
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device-group",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" }
                  ]}
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: [A-Za-z0-9_ .,-]{1,50}"
                }
              }
            }
      409:
        description: Device group name already used for another device group
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "Parameter conflict",
                  "code": "1004",
                  "message": "Parameter must be unique: name"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  put:
    description: Update given attributes of device group
    queryParameters:
      id:
        description: Device group id used as filter. Required if other request parameters are not present
        type: number
        required: false
      name:
        description: Device group name used as filter. Required if other request parameters are not present
        required: false
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
    body:
      application/json:
        description: Attributes to update
        properties:
          name:
            description: Device group name
            type: string
            maxLength: 50
            pattern: "[A-Za-z0-9_ .,-]{1,50}"
          description:
            description: Device group description
            type: string
            maxLength: 100
            pattern: "[A-Za-z0-9_ .,-]{1,100}"
    responses:
      200:
        description: Device group succesfully updated. Returns updated device group
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device-group?name=example-group",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier" },
                      { "name": "name", "value": "example-group", "prompt": "Group name" },
                      { "name": "description", "value": "Example description of group", "prompt": "Description" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "devices", "href":"http://localhost:8080/api/device?deviceGroup=1", "prompt": "Devices" }
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Group name", "regexp": "[A-Za-z0-9_ .,-]{1,50}" },
                    { "name": "description", "value": "", "prompt": "Description", "regexp": "[A-Za-z0-9_ .,-]{1,100}" }
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device-group",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" }
                  ]}
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters, missing parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: [A-Za-z0-9_ .,-]{1,50}"
                }
              }
            }
      404:
        description: Device group matching parameters not found
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      409:
        description: Device group name already used for another device
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "Parameter conflict",
                  "code": "1004",
                  "message": "Parameter must be unique: name"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  delete:
    description: Remove device group matching parameters
    queryParameters:
      id:
        description: Device group id used as filter. Required if other request parameters are not present.
        type: number
        required: false
      name:
        description: Device group name used as filter. Required if other request parameters are not present.
        required: false
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
    responses:
      204:
        description: Device group successfully removed
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: [A-Za-z0-9_ .,-]{1,50}"
                }
              }
            }
      404:
        description: Device group matching parameters not found
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-group",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }

/device-icon:
  get:
    description: Get device icon matching parameters
    queryParameters:
      id:
        description: Device icon id used as filter. Required if other request parameters are not present
        type: number
        required: false
      name:
        description: Device icon name used as filter. Required if other request parameters are not present
        required: false
        type: string
        maxLength: 25
        pattern: "^[A-Za-z0-9-_]{1,25}.(png)$"
    responses:
      200:
        description: Device icon succesfully found
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device-icon?name=example-icon.png",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier" },
                      { "name": "name", "value": "example-icon.png", "prompt": "Icon name" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "type", "href":"http://localhost:8080/api/device-type?deviceIconId=1", "prompt": "Device Type" }
                ],
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device-icon",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": ""}
                    ]
                  },
                  {
                    "rel": "image",
                    "href":"http://localhost:8080/api/device-icon/{image-name}",
                    "prompt":"Search image"
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: ^[A-Za-z0-9-_]{1,25}.(png)$"
                }
              }
            }
      404:
        description: No device icons found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  post:
    description: Add new device icon with given parameters
    queryParameters:
      name:
        description: Device icon name
        type: string
        maxLength: 25
        pattern: "^[A-Za-z0-9-_]{1,25}.(png)$"
    body:
      multipart/form-data:
        type: file
        fileTypes: ['image/png']
    responses:
      201:
        description: Device icon succesfully added. Returns inserted device icon attributes including generated id
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device-icon?name=example-icon.png",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier" },
                      { "name": "name", "value": "example-icon.png", "prompt": "Icon name" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "type", "href":"http://localhost:8080/api/device-type?deviceIconId=1", "prompt": "Device Type" }
                ],
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device-icon",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" }
                    ]
                  },
                  {
                    "rel": "image",
                    "href":"http://localhost:8080/api/device-icon/{image-name}",
                    "prompt":"Search image"
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: ^[A-Za-z0-9-_]{1,25}.(png)$"
                }
              }
            }
      409:
        description: Device icon name already used for another device icon
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "Parameter conflict",
                  "code": "1004",
                  "message": "Parameter must be unique: name"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  put:
    description: Rename device icon
    queryParameters:
      id:
        description: Device icon id used as filter. Required if other request parameters are not present
        type: number
        required: false
      name:
        description: Device icon name. Required if other request parameters are not present
        type: string
        maxLength: 25
        pattern: "^[A-Za-z0-9-_]{1,25}.(png)$"
    body:
      application/json:
        description: Attributes to update
        properties:
          name:
            description: Device icon name
            type: string
            maxLength: 25
            pattern: "^[A-Za-z0-9-_]{1,25}.(png)$"
    responses:
      200:
        description: Device icon succesfully renamed. Returns updated attributes of device icon
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device-icon?name=example-icon.png",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier" },
                      { "name": "name", "value": "example-icon.png", "prompt": "Icon name" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "type", "href":"http://localhost:8080/api/device-type?deviceIconId=1", "prompt": "Device Type" }
                ],
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device-icon",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" }
                    ]
                  },
                  {
                    "rel": "image",
                    "href":"http://localhost:8080/api/device-icon/{image-name}",
                    "prompt":"Search image"
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: ^[A-Za-z0-9-_]{1,25}.(png)$"
                }
              }
            }
      404:
        description: No device icons found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      409:
        description: Device icon name already used for another device icon
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "Parameter conflict",
                  "code": "1004",
                  "message": "Parameter must be unique: name"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  delete:
    description: Remove device icon matching parameters
    queryParameters:
      id:
        description: Device icon id used as filter. Required if other request parameters are not present.
        type: number
        required: false
      name:
        description: Device icon name. Required if other request parameters are not present.
        type: string
        maxLength: 25
        pattern: "^[A-Za-z0-9-_]{1,25}.(png)$"
    responses:
      204:
        description: Device icon successfully removed
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: ^[A-Za-z0-9-_]{1,25}.(png)$"
                }
              }
            }
      404:
        description: No device icons found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-icon",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  /{icon-name}:
    description: Name of image, e.g. example-icon.png
    get:
      description: Returns icon as image
      responses:
        200:
          description: Device icon succesfully found
          body:
            image/png:
              type: file
              fileTypes: ['image/png']
        404:
          description: No device icons found matching given parameters

/device-type:
  get:
    description: Get device types matching parameters
    queryParameters:
      id:
        description: Device type id used as filter
        type: number
        required: false
      name:
        description: Device group type used as filter
        required: false
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
      deviceIconId:
        description: Device icon id used as filter
        type: number
        required: false
    responses:
      200:
        description: Device types succesfully found
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device-type?name=example-type",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier" },
                      { "name": "name", "value": "example-type", "prompt": "Type name" },
                      { "name": "deviceIconId", "value": "2", "prompt": "Device Icon Identifier" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "devices", "href": "http://localhost:8080/api/device?deviceTypeId=1", "prompt": "Devices" },
                  { "rel": "icon", "href":"http://localhost:8080/api/device-icon?id=2", "prompt": "Device Icon" }
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Type name", "regexp": "[A-Za-z0-9_ .,-]{1,50}"},
                    { "name": "deviceTypeId", "value": "", "prompt": "Device Type Identifier"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device-type",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" },
                      { "name": "deviceIconId", "value": ""}
                    ]
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: ^[A-Za-z0-9-_]{1,25}.(png)$"
                }
              }
            }
      404:
        description: No device types found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  post:
    description: Add new device type with given parameters
    body:
      application/json:
        properties:
          name:
            description: Device type name
            type: string
            maxLength: 50
            pattern: "[A-Za-z0-9_ .,-]{1,50}"
          device_icon_id:
            description: Device icon id
            type: number
    responses:
      201:
        description: Device type succesfully added. Returns inserted device type including generated id
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device-type?name=example-type",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier" },
                      { "name": "name", "value": "example-type", "prompt": "Type name" },
                      { "name": "deviceIconId", "value": "2", "prompt": "Device Icon Identifier" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "devices", "href": "http://localhost:8080/api/device?deviceTypeId=1", "prompt": "Devices" },
                  { "rel": "icon", "href":"http://localhost:8080/api/device-icon?id=2", "prompt": "Device Icon" }
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Type name", "regexp": "[A-Za-z0-9_ .,-]{1,50}"},
                    { "name": "deviceTypeId", "value": "", "prompt": "Device Type Identifier"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device-type",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" },
                      { "name": "deviceIconId", "value": ""}
                    ]
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: ^[A-Za-z0-9-_]{1,25}.(png)$"
                }
              }
            }
      409:
        description: Device type name already used for another device type
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "Parameter conflict",
                  "code": "1004",
                  "message": "Parameter must be unique: name"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  put:
    description: Update given attributes of device type
    queryParameters:
      id:
        description: Device type id used as filter. Required if other request parameters are not present
        type: number
        required: false
      name:
        description: Device type name used as filter. Required if other request parameters are not present
        required: false
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
    body:
      application/json:
        description: Attributes to update
        properties:
          name:
            description: Device type name
            type: string
            maxLength: 50
            pattern: "[A-Za-z0-9_ .,-]{1,50}"
          deviceIconId:
            description: Device icon id
            type: number
    responses:
      200:
        description: Device type succesfully updated. Returns updated device type
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "items": [
                  {
                    "href": "http://localhost:8080/api/device-type?name=example-type",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Identifier" },
                      { "name": "name", "value": "example-type", "prompt": "Type name" },
                      { "name": "deviceIconId", "value": "2", "prompt": "Device Icon Identifier" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "devices", "href": "http://localhost:8080/api/device?deviceTypeId=1", "prompt": "Devices" },
                  { "rel": "icon", "href":"http://localhost:8080/api/device-icon?id=2", "prompt": "Device Icon" }
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Type name", "regexp": "[A-Za-z0-9_ .,-]{1,50}"},
                    { "name": "deviceTypeId", "value": "", "prompt": "Device Type Identifier"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/device-type",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" },
                      { "name": "deviceIconId", "value": ""}
                    ]
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: ^[A-Za-z0-9-_]{1,25}.(png)$"
                }
              }
            }
      404:
        description: No device types found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      409:
        description: Device type name already used for another device type
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "Parameter conflict",
                  "code": "1004",
                  "message": "Parameter must be unique: name"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }

  delete:
    description: Remove device types matching parameters
    queryParameters:
      id:
        description: Device type id used as filter. Required if other request parameters are not present.
        type: number
        required: false
      name:
        description: Device type name used as filter. Required if other request parameters are not present.
        required: false
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
      deviceIconId:
        description: Device icon id used as filter. Required if other request parameters are not present.
        type: number
        required: false
    responses:
      204:
        description: Device type successfully removed
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "Name must pass regexp: ^[A-Za-z0-9-_]{1,25}.(png)$"
                }
              }
            }
      404:
        description: No device types found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/device-type",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }

/location:
  get:
    description: Get locations matching parameters
    queryParameters:
      deviceId:
        description: Device id used as filter
        type: number
        required: false
      exactTime:
        description: Exact time used as filter
        type: string
        required: false
      startTime:
        description: Start time used as filter
        type: string
        required: false
      endTime:
        description: End time used as filter
        type: string
        required: false
    responses:
      200:
        description: Locations succesfully found
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/location",
                "items": [
                  {
                    "href": "http://localhost:8080/api/location?deviceId=1",
                    "data": [
                      { "name": "deviceId", "value": "1", "prompt": "Device Identifier" },
                      { "name": "coordinates", "value": "52.0800409,5.1273094", "prompt": "Coordinates" },
                      { "name": "time", "value": "2000-01-01 00:00:10", "prompt": "Timestamp" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "device", "href": "http://localhost:8080/api/device?deviceId=1", "prompt": "Device" }
                ],
                "template": {
                  "data": [
                    { "name": "deviceId", "value": "", "prompt": "Device Identifier"},
                    { "name": "coordinates", "value": "", "prompt": "Coordinates"},
                    { "name": "time", "value": "", "prompt": "Timestamp"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/location",
                    "prompt":"Search",
                    "data": [
                      { "name": "deviceId", "value": "" },
                      { "name": "exactTime", "value": "" },
                      { "name": "startTime", "value": "" },
                      { "name": "endTime", "value": "" }
                    ]
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/location",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "deviceId must be a number"
                }
              }
            }
      404:
        description: No locations found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/location",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/location",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  post:
    description: Add location with given parameters
    headers:
      x-authentication-key:
        description: Device's authentication key. Required if id is not present in request parameters
        required: false
    body:
      application/json:
        properties:
          deviceId:
            description: Device id. Required if authenticationKey is not present in headers
            type: number
          coordinates:
            description: Coordinates of location
            type: string
          time:
            description: Time of location update. Current time is used if not defined.
            type: string
            required: false
    responses:
      201:
        description: Location succesfully added. Returns inserted location
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/location",
                "items": [
                  {
                    "href": "http://localhost:8080/api/location?deviceId=1",
                    "data": [
                      { "name": "deviceId", "value": "1", "prompt": "Device Identifier" },
                      { "name": "coordinates", "value": "52.0800409,5.1273094", "prompt": "Coordinates" },
                      { "name": "time", "value": "2000-01-01 00:00:10", "prompt": "Timestamp" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "device", "href": "http://localhost:8080/api/device?deviceId=1", "prompt": "Device" }
                ],
                "template": {
                  "data": [
                    { "name": "deviceId", "value": "", "prompt": "Device Identifier"},
                    { "name": "coordinates", "value": "", "prompt": "Coordinates"},
                    { "name": "time", "value": "", "prompt": "Timestamp"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/location",
                    "prompt":"Search",
                    "data": [
                      { "name": "deviceId", "value": "" },
                      { "name": "exactTime", "value": "" },
                      { "name": "startTime", "value": "" },
                      { "name": "endTime", "value": "" }
                    ]
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/location",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "deviceId must be a number"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/location",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  delete:
    description: Delete locations matching parameters
    queryParameters:
      deviceId:
        description: Device id used as filter. Required if other request parameters are not present.
        type: number
        required: false
      exactTime:
        description: Exact time used as filter. Required if other request parameters are not present.
        type: string
        required: false
      startTime:
        description: Start time used as filter. Required if other request parameters are not present.
        type: string
        required: false
      endTime:
        description: End time used as filter. Required if other request parameters are not present.
        type: string
        required: false
    responses:
      204:
        description: Locations successfully removed
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/location",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "deviceId must be a number"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/location",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }

/configuration:
  get:
    description: Get configurations matching parameters
    queryParameters:
      id:
        description: Configuration id
        type: number
        required: false
      name:
        description: Configuration's name
        type: string
        required: false
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
    responses:
      200:
        description: Configurations succesfully found
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "items": [
                  {
                    "href": "http://localhost:8080/api/configuration?name=example-configuration",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Configuration Identifier" },
                      { "name": "name", "value": "example-configuration", "prompt": "Name" },
                      { "name": "description", "value": "Description of example configuration", "prompt": "Description" },
                      { "name": "jsonConfiguration", "value": "{\"IS_TEST\": \"TRUE\"}", "prompt": "Configuration as JSON" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "device", "href": "http://localhost:8080/api/device?configurationId=1", "prompt": "Device" }
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Name"},
                    { "name": "description", "value": "", "prompt": "Description"},
                    { "name": "jsonConfiguration", "value": "", "prompt": "Configuration as JSON"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/configuration",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" }
                    ]
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "id must be a number"
                }
              }
            }
      404:
        description: No configurations found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  post:
    description: Add new configuration type with given parameters
    body:
      application/json:
        properties:
          name:
            description: Configuration's name
            type: string
            maxLength: 50
            pattern: "[A-Za-z0-9_ .,-]{1,50}"
          description:
            description: Configuration's description
            type: string
            maxLength: 100
            pattern: "[A-Za-z0-9_ .,-]{1,100}"
          jsonConfiguration:
            description: Configuration's content as JSON
            type: string
    responses:
      201:
        description: Configuration succesfully added. Returns inserted configuration including generated id
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "items": [
                  {
                    "href": "http://localhost:8080/api/configuration?name=example-configuration",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Configuration Identifier" },
                      { "name": "name", "value": "example-configuration", "prompt": "Name" },
                      { "name": "description", "value": "Description of example configuration", "prompt": "Description" },
                      { "name": "jsonConfiguration", "value": "{\"IS_TEST\": \"TRUE\"}", "prompt": "Configuration as JSON" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "device", "href": "http://localhost:8080/api/device?configurationId=1", "prompt": "Device" }
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Name"},
                    { "name": "description", "value": "", "prompt": "Description"},
                    { "name": "jsonConfiguration", "value": "", "prompt": "Configuration as JSON"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/configuration",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" }
                    ]
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "id must be a number"
                }
              }
            }
      409:
        description: Configuration name already used for another device type
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "Parameter conflict",
                  "code": "1004",
                  "message": "Parameter must be unique: name"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  put:
    description: Update given attributes of configuration
    queryParameters:
      id:
        description: Configuration id used as filter. Required if other request parameters are not present.
        type: number
        required: false
      name:
        description: Configuration name used as filter. Required if other request parameters are not present.
        required: false
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
    body:
      application/json:
        description: Attributes to update
        properties:
          name:
            description: Configuration's name
            type: string
            maxLength: 50
            pattern: "[A-Za-z0-9_ .,-]{1,50}"
          description:
            description: Configuration's description
            type: string
            maxLength: 100
            pattern: "[A-Za-z0-9_ .,-]{1,100}"
          jsonConfiguration:
            description: Configuration's content as JSON
            type: string
    responses:
      200:
        description: Configuration succesfully updated. Returns updated configuration
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection" : {
                "version" : "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "items": [
                  {
                    "href": "http://localhost:8080/api/configuration?name=example-configuration",
                    "data": [
                      { "name": "id", "value": "1", "prompt": "Configuration Identifier" },
                      { "name": "name", "value": "example-configuration", "prompt": "Name" },
                      { "name": "description", "value": "Description of example configuration", "prompt": "Description" },
                      { "name": "jsonConfiguration", "value": "{\"IS_TEST\": \"TRUE\"}", "prompt": "Configuration as JSON" }
                    ]
                  }
                ],
                "links": [
                  { "rel": "device", "href": "http://localhost:8080/api/device?configurationId=1", "prompt": "Device" }
                ],
                "template": {
                  "data": [
                    { "name": "name", "value": "", "prompt": "Name"},
                    { "name": "description", "value": "", "prompt": "Description"},
                    { "name": "jsonConfiguration", "value": "", "prompt": "Configuration as JSON"}
                  ]
                },
                "queries": [
                  {
                    "rel": "search",
                    "href":"http://localhost:8080/api/configuration",
                    "prompt":"Search",
                    "data": [
                      { "name": "id", "value": "" },
                      { "name": "name", "value": "" }
                    ]
                  }
                ]
              }
            }
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "id must be a number"
                }
              }
            }
      404:
        description: No configurations found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      409:
        description: Configuration name already used for another device type
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "Parameter conflict",
                  "code": "1004",
                  "message": "Parameter must be unique: name"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
  delete:
    description: Remove device type matching parameters
    queryParameters:
      id:
        description: Configuration id. Required if other request parameters are not present.
        type: number
      name:
        description: Configuration's name. Required if other request parameters are not present.
        type: string
        maxLength: 50
        pattern: "[A-Za-z0-9_ .,-]{1,50}"
    responses:
      204:
        description: Configuration successfully removed
      400:
        description: Request contains errors, e.g. invalid parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "Parameter validation error",
                  "code": "1001",
                  "message": "id must be a number"
                }
              }
            }
      404:
        description: No configurations found matching given parameters
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "No items found",
                  "code": "1002",
                  "message": "No items found with given parameters"
                }
              }
            }
      500:
        description: Internal errors occured, e.g. unable to connect to database. Technical descriptions are not leaked to client.
        body:
          application/vnd.collection+json:
            type: object
            example: {
              "collection": {
                "version": "1.0",
                "href" : "http://localhost:8080/api/configuration",
                "error": {
                  "title": "Internal error",
                  "code": "1003",
                  "message": "Server encountered internal error"
                }
              }
            }
