## /devices/

Note left of DeviceController: GET /devices
DeviceController->DeviceService: getDevices
DeviceService->DeviceRepository:  getDevices
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: get_devices
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Devices
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: PUT /devices
DeviceController->DeviceService: updateDevice
DeviceService->DeviceRepository:  updateDevice
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: update_device
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: POST /devices
DeviceController->DeviceService: addDevice
DeviceService->DeviceRepository:  addDevice
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: add_device
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: DELETE /devices
DeviceController->DeviceService: deleteDevice
DeviceService->DeviceRepository:  deleteDevice
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: delete_device
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: isSuccess
DeviceService->DeviceController: ResponseWrapper

## /devices/{id}

Note left of DeviceController: GET /devices/{id}
DeviceController->DeviceService: getDevice(id)
DeviceService->DeviceRepository:  getDevice(id)
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: PUT /devices/{id}
DeviceController->DeviceService: updateDevice(id)
DeviceService->DeviceRepository:  updateDevice(id)
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: update_device(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: DELETE /devices/{id}
DeviceController->DeviceService: deleteDevice(id)
DeviceService->DeviceRepository:  deleteDevice(id)
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: delete_device(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: isSuccess
DeviceService->DeviceController: ResponseWrapper

## /devices/{id}/group

Note left of DeviceController: GET /devices/{id}/group
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceGroupRepository
participant Database
DeviceController->DeviceService: getDevicesGroup(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceGroupRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceGroupRepository: getDeviceGroup(deviceGroupId)
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: get_device_group(id)
Database->DeviceGroupRepository: Sql Resultset
DeviceGroupRepository->DeviceService: DeviceGroup
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: PUT /devices/{id}/group
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceGroupRepository
participant Database
DeviceController->DeviceService: updateDevicesGroup(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceGroupRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceGroupRepository: updateGroup(deviceGroupId)
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: update_device_group(id)
Database->DeviceGroupRepository: Sql Resultset
DeviceGroupRepository->DeviceService: DeviceGroup
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: POST /devices/{id}/group
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceGroupRepository
participant Database
DeviceController->DeviceService: addGroupForDevice(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceGroupRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceGroupRepository: addGroup
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: add_device_group
Database->DeviceGroupRepository: Sql Resultset
DeviceGroupRepository->DeviceService: DeviceGroup
DeviceService->DeviceRepository: updateDevice
Note over DeviceGroupRepository: StoredProcedure call
DeviceRepository->Database: update_device
Database->DeviceRepository: Sql Resultset
DeviceRepository->DeviceService: Device
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: DELETE /devices/{id}/group
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceGroupRepository
participant Database
DeviceController->DeviceService: deleteDevicesGroup(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceGroupRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceGroupRepository: deleteDeviceGroup(deviceGroupId)
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: delete_device_group(id)
Database->DeviceGroupRepository: Sql Resultset
DeviceGroupRepository->DeviceService: isSuccess
DeviceService->DeviceController: ResponseWrapper

## /devices/{id}/type

Note left of DeviceController: GET /devices/{id}/type
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceTypeRepository
participant Database
DeviceController->DeviceService: getDevicesType(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceTypeRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceTypeRepository: getDeviceType(deviceTypeId)
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: get_device_types(id)
Database->DeviceTypeRepository: Sql Resultset
DeviceTypeRepository->DeviceService: DeviceType
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: PUT /devices/{id}/type
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceTypeRepository
participant Database
DeviceController->DeviceService: updateDevicesType(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceTypeRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceTypeRepository: updateType(deviceTypeId)
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: update_device_type(id)
Database->DeviceTypeRepository: Sql Resultset
DeviceTypeRepository->DeviceService: DeviceType
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: POST /devices/{id}/type
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceTypeRepository
participant Database
DeviceController->DeviceService: addTypeForDevice(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceTypeRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceTypeRepository: addType
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: add_device_type
Database->DeviceTypeRepository: Sql Resultset
DeviceTypeRepository->DeviceService: DeviceType
DeviceService->DeviceRepository: updateDevice
Note over DeviceTypeRepository: StoredProcedure call
DeviceRepository->Database: update_device
Database->DeviceRepository: Sql Resultset
DeviceRepository->DeviceService: Device
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: DELETE /devices/{id}/type
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceTypeRepository
participant Database
DeviceController->DeviceService: deleteDevicesType(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceTypeRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceTypeRepository: deleteDeviceType(deviceTypeId)
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: delete_device_type(id)
Database->DeviceTypeRepository: Sql Resultset
DeviceTypeRepository->DeviceService: isSuccess
DeviceService->DeviceController: ResponseWrapper

## /devices/{id}/icon

Note left of DeviceController: GET /devices/{id}/icon
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceTypeService
participant DeviceTypeRepository
participant DeviceIconRepository
participant Database
DeviceController->DeviceService: getDevicesIcon(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceTypeRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceTypeService: getTypesIcon(deviceTypeId)
DeviceTypeService->DeviceTypeRepository: getDeviceType(deviceTypeId)
Note over DeviceIconRepository: StoredProcedure call
DeviceTypeRepository->Database: get_device_type(id)
Database->DeviceTypeRepository: Sql result set
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceIconRepository: getDeviceIcon(deviceIconId)
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: get_device_icons(id)
Database->DeviceIconRepository: Sql Resultset
DeviceIconRepository->DeviceTypeService: DeviceIcon
DeviceTypeService->DeviceService: DeviceIcon
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: PUT /devices/{id}/icon
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceTypeService
participant DeviceTypeRepository
participant DeviceIconRepository
participant Database
DeviceController->DeviceService: updateDevicesIcon(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceTypeRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceTypeService: updateTypesIcon(deviceTypeId)
DeviceTypeService->DeviceTypeRepository: getDeviceType(deviceTypeId)
Note over DeviceIconRepository: StoredProcedure call
DeviceTypeRepository->Database: get_device_type(id)
Database->DeviceTypeRepository: Sql result set
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceIconRepository: updateDeviceIcon(deviceIconId)
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: update_device_icons(id)
Database->DeviceIconRepository: Sql Resultset
DeviceIconRepository->DeviceTypeService: DeviceIcon
DeviceTypeService->DeviceService: DeviceIcon
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: DELETE /devices/{id}/icon
participant DeviceController
participant DeviceService
participant DeviceRepository
participant DeviceTypeService
participant DeviceTypeRepository
participant DeviceIconRepository
participant Database
DeviceController->DeviceService: DeleteDevicesIcon(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over DeviceTypeRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->DeviceTypeService: deleteTypesIcon(deviceTypeId)
DeviceTypeService->DeviceTypeRepository: getDeviceType(deviceTypeId)
Note over DeviceIconRepository: StoredProcedure call
DeviceTypeRepository->Database: get_device_type(id)
Database->DeviceTypeRepository: Sql result set
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceIconRepository: deleteDeviceIcon(deviceIconId)
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: delete_device_icons(id)
Database->DeviceIconRepository: Sql Resultset
DeviceIconRepository->DeviceTypeService: isSuccess
DeviceTypeService->DeviceService: isSuccess
DeviceService->DeviceController: ResponseWrapper

## /devices/{id}/configuration

Note left of DeviceController: GET /devices/{id}/configuration
participant DeviceController
participant DeviceService
participant DeviceRepository
participant ConfigurationRepository
participant Database
DeviceController->DeviceService: getDevicesConfiguration(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over ConfigurationRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->ConfigurationRepository: getConfiguration(configurationId)
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: get_configurations(id)
Database->ConfigurationRepository: Sql Resultset
ConfigurationRepository->DeviceService: Configuration
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: PUT /devices/{id}/configuration
participant DeviceController
participant DeviceService
participant DeviceRepository
participant ConfigurationRepository
participant Database
DeviceController->DeviceService: updateDevicesConfiguration(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over ConfigurationRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->ConfigurationRepository: updateConfiguration(configurationId)
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: update_configuration(id)
Database->ConfigurationRepository: Sql Resultset
ConfigurationRepository->DeviceService: Configuration
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: POST /devices/{id}/configuration
participant DeviceController
participant DeviceService
participant DeviceRepository
participant ConfigurationRepository
participant Database
DeviceController->DeviceService: addConfigurationForDevice(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over ConfigurationRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->ConfigurationRepository: addConfiguration
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: add_configuration
Database->ConfigurationRepository: Sql Resultset
ConfigurationRepository->DeviceService: Configuration
DeviceService->DeviceRepository: updateDevice
Note over ConfigurationRepository: StoredProcedure call
DeviceRepository->Database: update_device
Database->DeviceRepository: Sql Resultset
DeviceRepository->DeviceService: Device
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: DELETE /devices/{id}/configuration
participant DeviceController
participant DeviceService
participant DeviceRepository
participant ConfigurationRepository
participant Database
DeviceController->DeviceService: deleteDevicesConfiguration(id)
DeviceService->DeviceRepository:  getDevice(id)
Note over ConfigurationRepository: StoredProcedure call
DeviceRepository->Database: get_devices(id)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceService: Device
DeviceService->ConfigurationRepository: deleteConfiguration(configurationId)
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: delete_configuration(id)
Database->ConfigurationRepository: Sql Resultset
ConfigurationRepository->DeviceService: isSuccess
DeviceService->DeviceController: ResponseWrapper

## /devices/{id}/measurements

Note left of DeviceController: GET /devices/{id}/measurements
participant DeviceController
participant DeviceService
participant MeasurementRepository
participant Database
DeviceController->DeviceService: getDevicesMeasurements(id)
DeviceService->MeasurementRepository:  getMeasurements(deviceId)
Note right of MeasurementRepository: StoredProcedure call
MeasurementRepository->Database: get_measurements(id)
Database->MeasurementRepository: Sql ResultSet
MeasurementRepository->DeviceService: Measurements
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: POST /devices/{id}/measurements
participant DeviceController
participant DeviceService
participant MeasurementRepository
participant Database
DeviceController->DeviceService: addMeasurementForDevice(id)
DeviceService->MeasurementRepository:  addMeasurement
Note right of MeasurementRepository: StoredProcedure call
MeasurementRepository->Database: add_measurement
Database->MeasurementRepository: Sql ResultSet
MeasurementRepository->DeviceService: Measurement
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: DELETE /devices/{id}/measurements
participant DeviceController
participant DeviceService
participant MeasurementRepository
participant Database
DeviceController->DeviceService: deleteDevicesMeasurements(id)
DeviceService->MeasurementRepository:  deleteMeasurements
Note right of MeasurementRepository: StoredProcedure call
MeasurementRepository->Database: delete_measurement
Database->MeasurementRepository: Sql ResultSet
MeasurementRepository->DeviceService: isSuccess
DeviceService->DeviceController: ResponseWrapper

## /devices/{id}/locations

Note left of DeviceController: GET /devices/{id}/locations
participant DeviceController
participant DeviceService
participant LocationRepository
participant Database
DeviceController->DeviceService: getDevicesLocations(id)
DeviceService->LocationRepository:  getLocations(deviceId)
Note right of LocationRepository: StoredProcedure call
LocationRepository->Database: get_locations(id)
Database->LocationRepository: Sql ResultSet
LocationRepository->DeviceService: Locations
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: POST /devices/{id}/locations
participant DeviceController
participant DeviceService
participant LocationRepository
participant Database
DeviceController->DeviceService: addLocationForDevice(id)
DeviceService->LocationRepository:  addLocation
Note right of LocationRepository: StoredProcedure call
LocationRepository->Database: add_location
Database->LocationRepository: Sql ResultSet
LocationRepository->DeviceService: Location
DeviceService->DeviceController: ResponseWrapper

Note left of DeviceController: DELETE /devices/{id}/locations
participant DeviceController
participant DeviceService
participant LocationRepository
participant Database
DeviceController->DeviceService: deleteDevicesLocations(id)
DeviceService->LocationRepository:  deleteLocations
Note right of LocationRepository: StoredProcedure call
LocationRepository->Database: delete_location
Database->LocationRepository: Sql ResultSet
LocationRepository->DeviceService: isSuccess
DeviceService->DeviceController: ResponseWrapper

## /device-groups

Note left of DeviceGroupController: GET /device-groups
DeviceGroupController->DeviceGroupService: getDeviceGroups
DeviceGroupService->DeviceGroupRepository:  getDeviceGroups
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: get_device_groups
Database->DeviceGroupRepository: Sql ResultSet
DeviceGroupRepository->DeviceGroupService: DeviceGroups
DeviceGroupService->DeviceGroupController: ResponseWrapper

Note left of DeviceGroupController: PUT /device-groups
DeviceGroupController->DeviceGroupService: updateDeviceGroup
DeviceGroupService->DeviceGroupRepository:  updateDeviceGroup
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: update_device_group
Database->DeviceGroupRepository: Sql ResultSet
DeviceGroupRepository->DeviceGroupService: DeviceGroup
DeviceGroupService->DeviceGroupController: ResponseWrapper

Note left of DeviceGroupController: POST /device-groups
DeviceGroupController->DeviceGroupService: addDeviceGroup
DeviceGroupService->DeviceGroupRepository:  addDeviceGroup
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: add_device_group
Database->DeviceGroupRepository: Sql ResultSet
DeviceGroupRepository->DeviceGroupService: DeviceGroup
DeviceGroupService->DeviceGroupController: ResponseWrapper

Note left of DeviceGroupController: DELETE /device-groups
DeviceGroupController->DeviceGroupService: deleteDeviceGroup
DeviceGroupService->DeviceGroupRepository:  deleteDeviceGroup
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: delete_device_group
Database->DeviceGroupRepository: Sql ResultSet
DeviceGroupRepository->DeviceGroupService: isSuccess
DeviceGroupService->DeviceGroupController: ResponseWrapper

## /device-groups/{id}

Note left of DeviceGroupController: GET /device-groups/{id}
DeviceGroupController->DeviceGroupService: getDeviceGroup(id)
DeviceGroupService->DeviceGroupRepository:  getDeviceGroups(id)
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: get_device_groups(id)
Database->DeviceGroupRepository: Sql ResultSet
DeviceGroupRepository->DeviceGroupService: DeviceGroup
DeviceGroupService->DeviceGroupController: ResponseWrapper

Note left of DeviceGroupController: PUT /device-groups/{id}
DeviceGroupController->DeviceGroupService: updateDeviceGroup
DeviceGroupService->DeviceGroupRepository:  updateDeviceGroup
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: update_device_group
Database->DeviceGroupRepository: Sql ResultSet
DeviceGroupRepository->DeviceGroupService: DeviceGroup
DeviceGroupService->DeviceGroupController: ResponseWrapper

Note left of DeviceGroupController: DELETE /device-groups/{id}
DeviceGroupController->DeviceGroupService: deleteDeviceGroup
DeviceGroupService->DeviceGroupRepository:  deleteDeviceGroup
Note right of DeviceGroupRepository: StoredProcedure call
DeviceGroupRepository->Database: delete_device_group
Database->DeviceGroupRepository: Sql ResultSet
DeviceGroupRepository->DeviceGroupService: isSuccess
DeviceGroupService->DeviceGroupController: ResponseWrapper

## /device-groups/{id}/devices

Note left of DeviceGroupController: GET /device-groups/{id}/devices
DeviceGroupController->DeviceGroupService: getGroupsDevices(id)
DeviceGroupService->DeviceRepository:  getDevices(groupId)
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: get_devices(deviceGroupId)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceGroupService: Devices
DeviceGroupService->DeviceGroupController: ResponseWrapper

Note left of DeviceGroupController: POST /device-groups/{id}/devices
DeviceGroupController->DeviceGroupService: addDeviceToGroup
DeviceGroupService->DeviceRepository:  addDevice
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: add_device
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceGroupService: Device
DeviceGroupService->DeviceGroupController: ResponseWrapper

## /device-groups/{id}/measurements

participant DeviceGroupController
participant DeviceGroupService
participant DeviceRepository
participant MeasurementRepository
participant Database
Note left of DeviceGroupController: GET /device-groups/{id}/measurements
DeviceGroupController->DeviceGroupService: getGroupsMeasurements(id)
DeviceGroupService->DeviceRepository:  getDevices(groupId)
Note over MeasurementRepository: StoredProcedure call
DeviceRepository->Database: get_devices(deviceGroupId)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceGroupService: Devices
loop For each device
DeviceGroupService->MeasurementRepository: getMeasurements(deviceId)
Note right of MeasurementRepository: StoredProcedure call
MeasurementRepository->Database: get_measurements
Database->MeasurementRepository: Sql Resultset
MeasurementRepository-> DeviceGroupService: Measurements
end
DeviceGroupService->DeviceGroupController: ResponseWrapper

participant DeviceGroupController
participant DeviceGroupService
participant DeviceRepository
participant MeasurementRepository
participant Database
Note left of DeviceGroupController: DELETE /device-groups/{id}/measurements
DeviceGroupController->DeviceGroupService: deleteGroupsMeasurements(id)
DeviceGroupService->DeviceRepository:  getDevices(groupId)
Note over MeasurementRepository: StoredProcedure call
DeviceRepository->Database: get_devices(deviceGroupId)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceGroupService: Devices
loop For each device
DeviceGroupService->MeasurementRepository: deleteMeasurements(deviceId)
Note right of MeasurementRepository: StoredProcedure call
MeasurementRepository->Database: delete_measurements
Database->MeasurementRepository: Sql Resultset
MeasurementRepository-> DeviceGroupService: isSuccess
end
DeviceGroupService->DeviceGroupController: ResponseWrapper

## /device-groups/{id}/locations

participant DeviceGroupController
participant DeviceGroupService
participant DeviceRepository
participant LocationRepository
participant Database
Note left of DeviceGroupController: GET /device-groups/{id}/locations
DeviceGroupController->DeviceGroupService: getGroupsLocations(id)
DeviceGroupService->DeviceRepository:  getDevices(groupId)
Note over LocationRepository: StoredProcedure call
DeviceRepository->Database: get_devices(deviceGroupId)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceGroupService: Devices
loop For each device
DeviceGroupService->LocationRepository: getLocations(deviceId)
Note right of LocationRepository: StoredProcedure call
LocationRepository->Database: get_locations
Database->LocationRepository: Sql Resultset
LocationRepository-> DeviceGroupService: Locations
end
DeviceGroupService->DeviceGroupController: ResponseWrapper

participant DeviceGroupController
participant DeviceGroupService
participant DeviceRepository
participant LocationRepository
participant Database
Note left of DeviceGroupController: DELETE /device-groups/{id}/locations
DeviceGroupController->DeviceGroupService: deleteGroupsLocations(id)
DeviceGroupService->DeviceRepository:  getDevices(groupId)
Note over LocationRepository: StoredProcedure call
DeviceRepository->Database: get_devices(deviceGroupId)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceGroupService: Devices
loop For each device
DeviceGroupService->LocationRepository: deleteLocations(deviceId)
Note right of LocationRepository: StoredProcedure call
LocationRepository->Database: delete_locations
Database->LocationRepository: Sql Resultset
LocationRepository-> DeviceGroupService: isSuccess
end
DeviceGroupService->DeviceGroupController: ResponseWrapper

## /device-types

Note left of DeviceTypeController: GET /device-types
DeviceTypeController->DeviceTypeService: getDeviceTypes
DeviceTypeService->DeviceTypeRepository:  getDeviceTypes
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: get_device_types
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: DeviceTypes
DeviceTypeService->DeviceTypeController: ResponseWrapper

Note left of DeviceTypeController: PUT /device-types
DeviceTypeController->DeviceTypeService: updateDeviceType
DeviceTypeService->DeviceTypeRepository:  updateDeviceType
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: update_device_type
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceTypeController: ResponseWrapper

Note left of DeviceTypeController: POST /device-types
DeviceTypeController->DeviceTypeService: addDeviceType
DeviceTypeService->DeviceTypeRepository:  addDeviceType
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: add_device_type
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceTypeController: ResponseWrapper

Note left of DeviceTypeController: DELETE /device-types
DeviceTypeController->DeviceTypeService: deleteDeviceType
DeviceTypeService->DeviceTypeRepository:  deleteDeviceType
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: delete_device_type
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: isSuccess
DeviceTypeService->DeviceTypeController: ResponseWrapper

## /device-types/{id}

Note left of DeviceTypeController: GET /device-types/{id}
DeviceTypeController->DeviceTypeService: getDeviceType(id)
DeviceTypeService->DeviceTypeRepository:  getDeviceType(id)
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: get_device_types(id)
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceTypeController: ResponseWrapper

Note left of DeviceTypeController: PUT /device-types/{id}
DeviceTypeController->DeviceTypeService: updateDeviceType
DeviceTypeService->DeviceTypeRepository:  updateDeviceType
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: update_device_type
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceTypeController: ResponseWrapper

Note left of DeviceTypeController: DELETE /device-types/{id}
DeviceTypeController->DeviceTypeService: deleteDeviceType
DeviceTypeService->DeviceTypeRepository:  deleteDeviceType
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: delete_device_type
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: isSuccess
DeviceTypeService->DeviceTypeController: ResponseWrapper

## /device-types/{id}/devices

Note left of DeviceTypeController: GET /device-types/{id}/devices
DeviceTypeController->DeviceTypeService: getTypesDevices(id)
DeviceTypeService->DeviceRepository:  getDevices(deviceTypeId)
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: get_devices(deviceTypeId)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceTypeService: Devices
DeviceTypeService->DeviceTypeController: ResponseWrapper

Note left of DeviceTypeController: POST /device-types/{id}/devices
DeviceTypeController->DeviceTypeService: addDeviceWithType(id)
DeviceTypeService->DeviceRepository:  addDevice(deviceTypeId)
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: add_device
Database->DeviceRepository: Sql ResultSet
DeviceRepository->DeviceTypeService: Device
DeviceTypeService->DeviceTypeController: ResponseWrapper

## /device-types/{id}/icon

participant DeviceTypeController
participant DeviceTypeService
participant DeviceTypeRepository
participant DeviceIconRepository
participant Database
Note left of DeviceTypeController: GET /device-types/{id}/icon
DeviceTypeController->DeviceTypeService: getTypesIcon(id)
DeviceTypeService->DeviceTypeRepository:  getDeviceType(id)
Note over DeviceIconRepository: StoredProcedure call
DeviceTypeRepository->Database: get_device_type(id)
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceIconRepository: getDeviceIcon(deviceIconId)
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: get_device_icon
Database->DeviceIconRepository: Sql Resultset
DeviceIconRepository->DeviceTypeService: DeviceIcon
DeviceTypeService->DeviceTypeController: ResponseWrapper

participant DeviceTypeController
participant DeviceTypeService
participant DeviceTypeRepository
participant DeviceIconService
participant DeviceIconRepository
participant Database
Note left of DeviceTypeController: POST /device-types/{id}/icon
DeviceTypeController->DeviceTypeService: addIconForType(id)
DeviceTypeService->DeviceTypeRepository:  getDeviceType(id)
Note right of DeviceIconService: StoredProcedure call
DeviceTypeRepository->Database: get_device_type(id)
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceIconService: addDeviceIcon
DeviceIconService->DeviceIconRepository: addDeviceIcon
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: get_device_icon
Database->DeviceIconRepository: Sql Resultset
DeviceIconRepository->DeviceIconService: DeviceIcon
DeviceIconService->DeviceIconService: Save icon to file system
DeviceIconService->DeviceTypeService: DeviceIcon
DeviceTypeService->DeviceTypeRepository: updateDeviceType
Note right of DeviceIconService: StoredProcedure call
DeviceTypeRepository->Database: update_device_type
Database->DeviceTypeRepository: Sql Resultset
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceTypeController: ResponseWrapper

participant DeviceTypeController
participant DeviceTypeService
participant DeviceTypeRepository
participant DeviceIconService
participant DeviceIconRepository
participant Database
Note left of DeviceTypeController: PUT /device-types/{id}/icon
DeviceTypeController->DeviceTypeService: updateTypesIcon(id)
DeviceTypeService->DeviceTypeRepository:  getDeviceType(id)
Note right of DeviceIconService: StoredProcedure call
DeviceTypeRepository->Database: get_device_type(id)
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceIconService: updateDeviceIcon
DeviceIconService->DeviceIconRepository: updateDeviceIcon
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: update_device_icon
Database->DeviceIconRepository: Sql Resultset
DeviceIconRepository->DeviceIconService: DeviceIcon
DeviceIconService->DeviceIconService: Rename icon on file system
DeviceIconService->DeviceTypeService: DeviceIcon
DeviceTypeService->DeviceTypeController: ResponseWrapper

participant DeviceTypeController
participant DeviceTypeService
participant DeviceTypeRepository
participant DeviceIconService
participant DeviceIconRepository
participant Database
Note left of DeviceTypeController: DELETE /device-types/{id}/icon
DeviceTypeController->DeviceTypeService: deleteTypesIcon(id)
DeviceTypeService->DeviceTypeRepository:  getDeviceType(id)
Note right of DeviceIconService: StoredProcedure call
DeviceTypeRepository->Database: get_device_type(id)
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceTypeService: DeviceType
DeviceTypeService->DeviceIconService: deleteDeviceIcon
DeviceIconService->DeviceIconRepository: deleteDeviceIcon
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: delete_device_icon
Database->DeviceIconRepository: Sql Resultset
DeviceIconRepository->DeviceIconService: isSuccess
DeviceIconService->DeviceIconService: Delete icon from file system
DeviceIconService->DeviceTypeService: isSuccess
DeviceTypeService->DeviceTypeController: ResponseWrapper

## /device-icons

Note left of DeviceIconController: GET /device-icons
DeviceIconController->DeviceIconService: getDeviceIcons
DeviceIconService->DeviceIconRepository:  getDeviceIcons
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: get_device_icons
Database->DeviceIconRepository: Sql ResultSet
DeviceIconRepository->DeviceIconService: DeviceIcons
DeviceIconService->DeviceIconController: ResponseWrapper

Note left of DeviceIconController: PUT /device-icons
DeviceIconController->DeviceIconService: updateDeviceIcon
DeviceIconService->DeviceIconRepository:  updateDeviceIcon
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: update_device_icon
Database->DeviceIconRepository: Sql ResultSet
DeviceIconRepository->DeviceIconService: DeviceIcon
DeviceIconService->DeviceIconService: Rename icon on file system
DeviceIconService->DeviceIconController: ResponseWrapper

Note left of DeviceIconController: POST /device-icons
DeviceIconController->DeviceIconService: addDeviceIcon
DeviceIconService->DeviceIconRepository:  addDeviceIcon
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: add_device_icon
Database->DeviceIconRepository: Sql ResultSet
DeviceIconRepository->DeviceIconService: DeviceIcon
DeviceIconService->DeviceIconService: Add device icon to file system
DeviceIconService->DeviceIconController: ResponseWrapper

Note left of DeviceIconController: DELETE /device-icons
DeviceIconController->DeviceIconService: deleteDeviceIcon
DeviceIconService->DeviceIconRepository:  deleteDeviceIcon
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: delete_device_icon
Database->DeviceIconRepository: Sql ResultSet
DeviceIconRepository->DeviceIconService: isSuccess
DeviceIconService->DeviceIconService: Delete device icon from file system
DeviceIconService->DeviceIconController: ResponseWrapper

## /device-icons/{id}

Note left of DeviceIconController: GET /device-icons/{id}
DeviceIconController->DeviceIconService: getDeviceIcon
DeviceIconService->DeviceIconRepository:  getDeviceIcon
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: get_device_icons(id)
Database->DeviceIconRepository: Sql ResultSet
DeviceIconRepository->DeviceIconService: DeviceIcon
DeviceIconService->DeviceIconController: ResponseWrapper

Note left of DeviceIconController: PUT /device-icons/{id}
DeviceIconController->DeviceIconService: updateDeviceIcon
DeviceIconService->DeviceIconRepository:  updateDeviceIcon
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: update_device_icon
Database->DeviceIconRepository: Sql ResultSet
DeviceIconRepository->DeviceIconService: DeviceIcon
DeviceIconService->DeviceIconService: Rename icon on file system
DeviceIconService->DeviceIconController: ResponseWrapper

Note left of DeviceIconController: DELETE /device-icons/{id}
DeviceIconController->DeviceIconService: deleteDeviceIcon
DeviceIconService->DeviceIconRepository:  deleteDeviceIcon
Note right of DeviceIconRepository: StoredProcedure call
DeviceIconRepository->Database: delete_device_icon
Database->DeviceIconRepository: Sql ResultSet
DeviceIconRepository->DeviceIconService: isSuccess
DeviceIconService->DeviceIconService: Delete device icon from file system
DeviceIconService->DeviceIconController: ResponseWrapper

## /device-icons/{id}/types

Note left of DeviceIconController: GET /device-icons/{id}/types
DeviceIconController->DeviceIconService: getIconsTypes(deviceIconId)
DeviceIconService->DeviceTypeRepository:  getDeviceTypes(deviceIconId)
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: get_device_types(deviceIconId)
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceIconService: DeviceTypes
DeviceIconService->DeviceIconController: ResponseWrapper

Note left of DeviceIconController: POST /device-icons/{id}/types
DeviceIconController->DeviceIconService: addTypeForIcon
DeviceIconService->DeviceTypeRepository:  addDeviceType
Note right of DeviceTypeRepository: StoredProcedure call
DeviceTypeRepository->Database: add_device_type
Database->DeviceTypeRepository: Sql ResultSet
DeviceTypeRepository->DeviceIconService: DeviceType
DeviceIconService->DeviceIconController: ResponseWrapper

## /device-icons/{icon-name}

Note left of DeviceIconController: GET /device-icons/{icon-name}
DeviceIconController->DeviceIconService: getDeviceIconFile
DeviceIconService->DeviceIconService: Read device icon from file system
DeviceIconService->DeviceIconController: Device icon file

## /configurations

Note left of ConfigurationController: GET /configurations
ConfigurationController->ConfigurationService: getConfigurations
ConfigurationService->ConfigurationRepository:  getConfigurations
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: get_configurations
Database->ConfigurationRepository: Sql ResultSet
ConfigurationRepository->ConfigurationService: Configurations
ConfigurationService->ConfigurationController: ResponseWrapper

Note left of ConfigurationController: PUT /configurations
ConfigurationController->ConfigurationService: updateConfiguration
ConfigurationService->ConfigurationRepository:  updateConfiguration
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: update_configuration
Database->ConfigurationRepository: Sql ResultSet
ConfigurationRepository->ConfigurationService: Configuration
ConfigurationService->ConfigurationController: ResponseWrapper

Note left of ConfigurationController: POST /configurations
ConfigurationController->ConfigurationService: addConfiguration
ConfigurationService->ConfigurationRepository:  addConfiguration
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: add_configuration
Database->ConfigurationRepository: Sql ResultSet
ConfigurationRepository->ConfigurationService: Configuration
ConfigurationService->ConfigurationController: ResponseWrapper

Note left of ConfigurationController: DELETE /configurations
ConfigurationController->ConfigurationService: deleteConfiguration
ConfigurationService->ConfigurationRepository:  deleteConfiguration
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: delete_configuration
Database->ConfigurationRepository: Sql ResultSet
ConfigurationRepository->ConfigurationService: isSuccess
ConfigurationService->ConfigurationController: ResponseWrapper

## /configurations/{id}

Note left of ConfigurationController: GET /configurations/{id}
ConfigurationController->ConfigurationService: getConfiguration(id)
ConfigurationService->ConfigurationRepository:  getConfiguration(id)
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: get_configurations(id)
Database->ConfigurationRepository: Sql ResultSet
ConfigurationRepository->ConfigurationService: Configuration
ConfigurationService->ConfigurationController: ResponseWrapper

Note left of ConfigurationController: PUT /configurations/{id}
ConfigurationController->ConfigurationService: updateConfiguration
ConfigurationService->ConfigurationRepository:  updateConfiguration
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: update_configuration
Database->ConfigurationRepository: Sql ResultSet
ConfigurationRepository->ConfigurationService: Configuration
ConfigurationService->ConfigurationController: ResponseWrapper

Note left of ConfigurationController: DELETE /configurations/{id}
ConfigurationController->ConfigurationService: deleteConfiguration
ConfigurationService->ConfigurationRepository:  deleteConfiguration
Note right of ConfigurationRepository: StoredProcedure call
ConfigurationRepository->Database: delete_configuration
Database->ConfigurationRepository: Sql ResultSet
ConfigurationRepository->ConfigurationService: isSuccess
ConfigurationService->ConfigurationController: ResponseWrapper

## /configurations/{id}/devices

Note left of ConfigurationController: GET /configurations/{id}/devices
ConfigurationController->ConfigurationService: getConfigurationsDevices(id)
ConfigurationService->DeviceRepository:  getDevices(configurationId)
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: get_devices(configurationId)
Database->DeviceRepository: Sql ResultSet
DeviceRepository->ConfigurationService: Devices
ConfigurationService->ConfigurationController: ResponseWrapper

Note left of ConfigurationController: POST /configurations/{id}/devices
ConfigurationController->ConfigurationService: addDeviceWithConfiguration
ConfigurationService->DeviceRepository:  addDevice
Note right of DeviceRepository: StoredProcedure call
DeviceRepository->Database: add_device
Database->DeviceRepository: Sql ResultSet
DeviceRepository->ConfigurationService: Device
ConfigurationService->ConfigurationController: ResponseWrapper

## /locations

## /measurements